/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_like_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/like.js */ \"./src/js/modules/like.js\");\n/* harmony import */ var _modules_dialog_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/dialog.js */ \"./src/js/modules/dialog.js\");\n/* harmony import */ var _modules_input_fields_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/input-fields.js */ \"./src/js/modules/input-fields.js\");\n/* harmony import */ var _modules_new_chat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/new-chat.js */ \"./src/js/modules/new-chat.js\");\n/* harmony import */ var _modules_search_all_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/search-all.js */ \"./src/js/modules/search-all.js\");\n/* harmony import */ var _modules_targetSearch_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/targetSearch.js */ \"./src/js/modules/targetSearch.js\");\n/* harmony import */ var _modules_fetchSearch_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/fetchSearch.js */ \"./src/js/modules/fetchSearch.js\");\n/* harmony import */ var _modules_triggerModal_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/triggerModal.js */ \"./src/js/modules/triggerModal.js\");\n/* harmony import */ var _modules_uploadPhoto_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/uploadPhoto.js */ \"./src/js/modules/uploadPhoto.js\");\n/* harmony import */ var _modules_addFriend_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/addFriend.js */ \"./src/js/modules/addFriend.js\");\n/* harmony import */ var _modules_uploadPublication_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/uploadPublication.js */ \"./src/js/modules/uploadPublication.js\");\n/* harmony import */ var _modules_preloader_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/preloader.js */ \"./src/js/modules/preloader.js\");\n/* harmony import */ var _modules_schedules_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modules/schedules.js */ \"./src/js/modules/schedules.js\");\n/* harmony import */ var _modules_makeCorrectDate_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./modules/makeCorrectDate.js */ \"./src/js/modules/makeCorrectDate.js\");\n/* harmony import */ var _modules_comment_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./modules/comment.js */ \"./src/js/modules/comment.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\nwindow.hidePreloader = _modules_preloader_js__WEBPACK_IMPORTED_MODULE_11__.hidePreloader;\r\nwindow.showPreloader = _modules_preloader_js__WEBPACK_IMPORTED_MODULE_11__.showPreloader;\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n  window.toggleLike = _modules_like_js__WEBPACK_IMPORTED_MODULE_0__.toggleLike;\r\n  window.toDialog = _modules_dialog_js__WEBPACK_IMPORTED_MODULE_1__.toDialog;\r\n  window.autoResize = _modules_input_fields_js__WEBPACK_IMPORTED_MODULE_2__.autoResize;\r\n  window.addPerson = _modules_new_chat_js__WEBPACK_IMPORTED_MODULE_3__.addPerson;\r\n  window.toggleUserList = _modules_new_chat_js__WEBPACK_IMPORTED_MODULE_3__.toggleUserList;\r\n  window.searchAll = _modules_search_all_js__WEBPACK_IMPORTED_MODULE_4__.searchAll;\r\n  window.targetSearch = _modules_targetSearch_js__WEBPACK_IMPORTED_MODULE_5__.targetSearch;\r\n  window.openModal = _modules_triggerModal_js__WEBPACK_IMPORTED_MODULE_7__.openModal;\r\n  window.closeModal = _modules_triggerModal_js__WEBPACK_IMPORTED_MODULE_7__.closeModal;\r\n  window.uploadPhoto = _modules_uploadPhoto_js__WEBPACK_IMPORTED_MODULE_8__.uploadPhoto;\r\n  window.exportProfilePhoto = _modules_uploadPhoto_js__WEBPACK_IMPORTED_MODULE_8__.exportProfilePhoto;\r\n  window.uploadPhotos = _modules_uploadPublication_js__WEBPACK_IMPORTED_MODULE_10__.uploadPhotos;\r\n  window.deletePhoto = _modules_uploadPublication_js__WEBPACK_IMPORTED_MODULE_10__.deletePhoto;\r\n  window.addFriend = _modules_addFriend_js__WEBPACK_IMPORTED_MODULE_9__.addFriend;\r\n  window.acceptInvite = _modules_addFriend_js__WEBPACK_IMPORTED_MODULE_9__.acceptInvite;\r\n  window.denyInvite = _modules_addFriend_js__WEBPACK_IMPORTED_MODULE_9__.denyInvite;\r\n  window.deleteFriend = _modules_addFriend_js__WEBPACK_IMPORTED_MODULE_9__.deleteFriend;\r\n  window.changeProfileUI = _modules_addFriend_js__WEBPACK_IMPORTED_MODULE_9__.changeProfileUI;\r\n  window.handleFriendChange = _modules_addFriend_js__WEBPACK_IMPORTED_MODULE_9__.handleFriendChange;\r\n  window.populateFromUpload = _modules_uploadPublication_js__WEBPACK_IMPORTED_MODULE_10__.populateFromUpload;\r\n  window.exportPublication = _modules_uploadPublication_js__WEBPACK_IMPORTED_MODULE_10__.exportPublication;\r\n  window.exportMessage = _modules_uploadPublication_js__WEBPACK_IMPORTED_MODULE_10__.exportMessage;\r\n  window.updateMessagesByUrl = _modules_schedules_js__WEBPACK_IMPORTED_MODULE_12__.updateMessagesByUrl;\r\n  window.makeCorrectDate = _modules_makeCorrectDate_js__WEBPACK_IMPORTED_MODULE_13__.makeCorrectDate;\r\n  window.clearGrid = _modules_uploadPublication_js__WEBPACK_IMPORTED_MODULE_10__.clearGrid;\r\n  window.loadChatList = _modules_new_chat_js__WEBPACK_IMPORTED_MODULE_3__.loadChatList;\r\n  window.updateChatListByUrl = _modules_schedules_js__WEBPACK_IMPORTED_MODULE_12__.updateChatListByUrl;\r\n  window.displayComments = _modules_comment_js__WEBPACK_IMPORTED_MODULE_14__.displayComments;\r\n  window.seeMoreComments = _modules_comment_js__WEBPACK_IMPORTED_MODULE_14__.seeMoreComments;\r\n  window.sendMessageButton = _modules_input_fields_js__WEBPACK_IMPORTED_MODULE_2__.sendMessageButton;\r\n  window.exportPostComment = _modules_uploadPublication_js__WEBPACK_IMPORTED_MODULE_10__.exportPostComment;\r\n\r\n  const body = document.body;\r\n  body.minHeight = window.offsetHeight;\r\n  \r\n\r\n  const dialogsList = document.querySelector('.dialogs__list');\r\n  if (dialogsList) {\r\n    window.addEventListener('scroll', () => {\r\n      const dialogsRect = dialogsList.getBoundingClientRect();\r\n      if (dialogsRect.top < 0) {\r\n        dialogsList.style.position = 'fixed';\r\n        dialogsList.style.top = '2';\r\n      } else {\r\n        dialogsList.style.position = 'static';\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  var timeDivs = document.querySelectorAll('.date__subtitle');\r\n  timeDivs.forEach(function(timeDiv) {\r\n      var timeElement = timeDiv.querySelector('.date__date');\r\n      \r\n      if (timeElement) {\r\n          timeElement.textContent = (0,_modules_makeCorrectDate_js__WEBPACK_IMPORTED_MODULE_13__.makeCorrectDate)(timeElement.getAttribute('time'));\r\n      }\r\n  });\r\n  \r\n  // добавление последних сообщений \r\n  setInterval(_modules_schedules_js__WEBPACK_IMPORTED_MODULE_12__.updateMessagesByUrl, 3000);\r\n  // затратная функция\r\n  setInterval(_modules_schedules_js__WEBPACK_IMPORTED_MODULE_12__.updateChatListByUrl, 10000);\r\n\r\n});\r\n\r\n\r\nconst dialogsList = document.querySelector('.dialogs__list');\r\nif (dialogsList) {\r\n  window.addEventListener('scroll', () => {\r\n    const dialogsRect = dialogsList.getBoundingClientRect();\r\n    if (dialogsRect.top < 0) {\r\n      dialogsList.style.position = 'fixed';\r\n      dialogsList.style.top = '2';\r\n    } else {\r\n      dialogsList.style.position = 'static';\r\n    }\r\n  });\r\n}\r\n\r\n\r\ndocument.addEventListener('click', function(event) {\r\n  var searchResults = document.querySelector('.nav__search-results');\r\n  var input = document.getElementById('search-all');\r\n  \r\n  // Если клик был не на input и не внутри .nav__search-results, то скрываем список\r\n  if (!input.contains(event.target) && !searchResults.contains(event.target)) {\r\n      (0,_modules_targetSearch_js__WEBPACK_IMPORTED_MODULE_5__.hideSearchResults)();\r\n  }\r\n});\r\n\r\n\r\n\r\nlet newChatForm = document.getElementById('new-chat-form')\r\n\r\nif (newChatForm) {\r\n  newChatForm.addEventListener('submit', function(event) {\r\n    event.preventDefault(); \r\n    \r\n    let checkedSpans = document.querySelectorAll('.dialog__title.radio-btn-active');\r\n    let title = document.querySelector('.chat__title')\r\n    let description = document.querySelector('.chat__description')\r\n    let checkedFriendIds = [];\r\n    checkedSpans.forEach(function(span) {\r\n        checkedFriendIds.push(span.getAttribute('friend-id'));\r\n    });\r\n\r\n    fetch('/create_chat', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ checkedFriends: checkedFriendIds, title: title.value, description: description.value}),\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n      if (data.message == 'Success') {\r\n        (0,_modules_new_chat_js__WEBPACK_IMPORTED_MODULE_3__.loadChatList)();\r\n        (0,_modules_new_chat_js__WEBPACK_IMPORTED_MODULE_3__.toggleUserList)();\r\n      }\r\n    })\r\n    .catch(error => {\r\n        console.error('There was a problem with the fetch operation:', error);\r\n    });\r\n\r\n});\r\n}\r\n \r\nlet searchTimeoutId;\r\n\r\nlet search = document.getElementById('search-all');\r\nif (search) {\r\n  search.addEventListener('input', function(event) {\r\n  \r\n    clearTimeout(searchTimeoutId);\r\n    let searchResults = document.getElementById('search-results-id');\r\n    if (searchResults.innerHTML.includes('search-results__info')) {\r\n      searchResults.innerHTML = `\r\n      <div class=\"loader\">\r\n      <div class=\"inner one\"></div>\r\n      <div class=\"inner two\"></div>\r\n      <div class=\"inner three\"></div>\r\n      </div>\r\n      `\r\n    }\r\n\r\n    const searchText = this.value.trim();\r\n    \r\n    if (searchText.length > 0) {\r\n        searchTimeoutId = setTimeout(function() {\r\n          fetch(`/get_users_by_fullname/${searchText}`)\r\n          .then(response => {\r\n              if (!response.ok) {\r\n                  throw new Error('Network response was not ok');\r\n              }\r\n              return response.json();\r\n          })\r\n          .then(users => {\r\n            (0,_modules_fetchSearch_js__WEBPACK_IMPORTED_MODULE_6__.displaySearchResults)(users);\r\n          })\r\n          .catch(error => {\r\n              console.error('Error fetching users:', error);\r\n          });\r\n          ;\r\n        }, 2000);\r\n    }\r\n});\r\n}\r\n\n\n//# sourceURL=webpack://gulp/./src/js/app.js?");

/***/ }),

/***/ "./src/js/modules/addFriend.js":
/*!*************************************!*\
  !*** ./src/js/modules/addFriend.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   acceptInvite: () => (/* binding */ acceptInvite),\n/* harmony export */   addFriend: () => (/* binding */ addFriend),\n/* harmony export */   changeProfileUI: () => (/* binding */ changeProfileUI),\n/* harmony export */   deleteFriend: () => (/* binding */ deleteFriend),\n/* harmony export */   denyInvite: () => (/* binding */ denyInvite),\n/* harmony export */   handleFriendChange: () => (/* binding */ handleFriendChange)\n/* harmony export */ });\nfunction addFriend(userId, friendId) {\r\n  return fetch('/send_friend_request', {\r\n    method: 'POST',\r\n    body: JSON.stringify({friendId: friendId}),\r\n  })\r\n  .then(response => {\r\n    if (response.ok) {\r\n      console.log('Friend invite sent successfully');\r\n    } else {\r\n      console.error('Failed to sent invite');\r\n    }\r\n  })\r\n  .catch(error => {\r\n    console.error('There was a problem with adding friend:', error);\r\n  });\r\n}\r\n\r\n\r\nfunction denyInvite(userId, friendId) {\r\n  return fetch('/deny_friend_request', {\r\n    method: 'POST',\r\n    body: JSON.stringify({userId: userId, friendId: friendId}),\r\n  }) \r\n  .then(response => {\r\n    if (response.ok) {\r\n      console.log('Friend invite denied successfully');\r\n    } else {\r\n      console.error('Failed to deny invite');\r\n    }\r\n  })\r\n  .catch(error => {\r\n    console.error('There was a problem with denying invite:', error);\r\n  });\r\n}\r\n\r\nfunction acceptInvite(userId, friendId) {\r\n  return fetch('/accept_friend_request', {\r\n    method: 'POST',\r\n    body: JSON.stringify({friendId: friendId}),\r\n  })\r\n  .then(response => {\r\n    if (response.ok) {\r\n      console.log('Friend invite accepted successfully');\r\n    } else {\r\n      console.error('Failed to accept invite');\r\n    }\r\n  })\r\n  .catch(error => {\r\n    console.error('There was a problem with accepting invite:', error);\r\n  });\r\n}\r\n\r\n\r\nfunction deleteFriend(userId, friendId) {\r\n  return fetch('/delete_friend', {\r\n    method: 'POST',\r\n    body: JSON.stringify({userId: userId, friendId: friendId}),\r\n  })\r\n  .then(response => {\r\n    if (response.ok) {\r\n      console.log('Friend deleted successfully');\r\n    } else {\r\n      console.error('Failed to delete friend');\r\n    }\r\n  })\r\n  .catch(error => {\r\n    console.error('There was a problem with deleting friend:', error);\r\n  });\r\n}\r\n\r\n\r\nfunction changeProfileUI(elementId, request, userId, profileUserId) {\r\n  const friendDiv = document.getElementById(elementId);\r\n  friendDiv.innerHTML = '';\r\n  if (request == \"deny\" || request == \"delete\") {\r\n    friendDiv.innerHTML = `\r\n      <button class=\"profile__button-add\" onclick=\"addFriend('${userId}', '${profileUserId}'); \r\n      changeProfileUI('friend-action-id', 'send', '${userId}', '${profileUserId}')\">Добавить в друзья</button>\r\n    `\r\n  }\r\n  else if (request == \"send\") {\r\n    friendDiv.innerHTML = `\r\n      <button class=\"profile__button-add\" onclick=\"denyInvite('${userId}', '${profileUserId}');\r\n      changeProfileUI('friend-action-id', 'deny', '${userId}', '${profileUserId}')\">Отклонить свою заявку</button>\r\n    `\r\n  }\r\n  else if (request == \"accept\") {\r\n    friendDiv.innerHTML = `\r\n      <button class=\"profile__button-add\" onclick=\"deleteFriend('${userId}', '${profileUserId}');\r\n      changeProfileUI('friend-action-id', 'delete', '${userId}', '${profileUserId}')\">Удалить из друзей</button>\r\n      <button class=\"profile__button-message _icon-messages\" onclick=\"toDialog('${result.id}')\"></button>\r\n    ` \r\n  }\r\n}\r\n\r\n\r\nfunction fetchAndChangeFriendUI(userId, listId, listType) {\r\n  fetch(`/get_user_friends/${listType}`)\r\n  .then(response => {\r\n    if (response.ok) {\r\n      console.log('Friend list retrieved successfully');\r\n    }\r\n    else {\r\n      console.log('Friend list retrieving went wrong');\r\n    }\r\n    return response.json();\r\n  })\r\n  .then(data => {\r\n    if (data.message == 'Success') {\r\n      changeFriendUI(data, userId, listId, listType);\r\n    }\r\n  })\r\n\r\n}\r\n\r\n\r\nfunction changeFriendUI(data, userId, listId, listType) {\r\n  const list = document.getElementById(listId);\r\n  list.innerHTML = '';\r\n  data.results.forEach(result => { \r\n    const resultItem = document.createElement('li');\r\n    resultItem.classList.add('dialog__item');\r\n    let actionTemplate;\r\n    if (listType == 'received') {\r\n      actionTemplate = `\r\n        <span class=\"search-results__button _icon-check\" role=\"button\"\r\n        onclick=\"handleFriendChange('${userId}', '${result.id}', 'accept', 'received-requests-list-id', 'friends-list-id', 'received')\"></span>\r\n        <span class=\"search-results__button _icon-close\" role=\"button\"\r\n        onclick=\"handleFriendChange('${result.id}', '${userId}', 'deny', 'received-requests-list-id', 'friends-list-id', 'received')\"></span>\r\n      `\r\n    }\r\n    else if (listType == 'sent') {\r\n      actionTemplate = `\r\n        <span class=\"search-results__button _icon-close\" role=\"button\"\r\n        onclick=\"handleFriendChange('${userId}', '${result.id}', 'deny', 'sent-requests-list-id', 'friends-list-id', 'sent')\"></span>\r\n      `\r\n    }\r\n    else {\r\n      actionTemplate = `\r\n      <span class=\"search-results__button _icon-messages\" role=\"button\" onclick=\"toDialog('${result.id}')\"></span>\r\n      <span class=\"search-results__button _icon-trash\" role=\"button\"\r\n      onclick=\"handleFriendChange('${userId}', '${result.id}', 'delete', 'friends-list-id', 'friends-list-id', 'friends')\"></span>\r\n    `\r\n    }\r\n    const resultTemplate = `\r\n      <div class=\"dialog__block\">\r\n        <div class=\"dialog__photo\">\r\n          <img src=\"${profileAvatarsDir}/${result.img}\" alt=\"\">\r\n        </div>\r\n        <div class=\"dialog__content\">\r\n          <div class=\"dialog__title\">\r\n              <a class=\"dialog__title text vertical-centered\" href=\"${profilePath}/${result.id}\">${result.fullname}</a>\r\n              <div>\r\n                ${actionTemplate}\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;  \r\n    resultItem.innerHTML = resultTemplate;\r\n\r\n    list.appendChild(resultItem);\r\n  });\r\n}\r\n\r\n\r\nfunction handleFriendChange(userId, friendId, friendAction, listId, friendlistId, listType) {\r\n  let friendFunc;\r\n  if (friendAction == 'add') friendFunc = addFriend;\r\n  else if (friendAction == 'accept') friendFunc = acceptInvite;\r\n  else if (friendAction == 'deny') friendFunc = denyInvite;\r\n  else friendFunc = deleteFriend;\r\n  friendFunc(userId, friendId)\r\n  .then(data => {\r\n    fetchAndChangeFriendUI(userId, listId, listType);\r\n    if (friendAction == 'accept') fetchAndChangeFriendUI(userId, friendlistId, 'friends');\r\n  })\r\n  .catch(error => {\r\n    console.error('Error occurred:', error);\r\n  });\r\n}\n\n//# sourceURL=webpack://gulp/./src/js/modules/addFriend.js?");

/***/ }),

/***/ "./src/js/modules/comment.js":
/*!***********************************!*\
  !*** ./src/js/modules/comment.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   displayComments: () => (/* binding */ displayComments),\n/* harmony export */   seeMoreComments: () => (/* binding */ seeMoreComments)\n/* harmony export */ });\n\r\nfunction displayComments(postId) {\r\n  let post = document.getElementById(`${postId}`);\r\n\r\n\r\n  if (post) {\r\n    if (post.classList.contains('active')) {\r\n      post.classList.remove('active');\r\n    } else {\r\n      post.classList.add('active');\r\n    }\r\n  } \r\n\r\n  let commentsUl = post.querySelector('.news-comments__list');\r\n\r\n  seeMoreComments(commentsUl.getAttribute('id'))\r\n}\r\n\r\n\r\nfunction seeMoreComments(postListId) {\r\n  let postList = document.getElementById(`${postListId}`)\r\n  if (postList) {\r\n    for (let comment of postList.querySelectorAll('.news-comments__item')) {\r\n        comment.style.display = 'block'\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/comment.js?");

/***/ }),

/***/ "./src/js/modules/dialog.js":
/*!**********************************!*\
  !*** ./src/js/modules/dialog.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toDialog: () => (/* binding */ toDialog)\n/* harmony export */ });\nfunction getDialogId(friendId) {\r\n  const formData = new FormData();\r\n  formData.append('dialogUserId', friendId);\r\n  return fetch('/get_dialog', {\r\n    method: 'POST',\r\n    body: formData\r\n  })\r\n  .then(response => {\r\n    if (response.ok) {\r\n      return response.json()\r\n    }\r\n    else {\r\n      console.log('Something went wrong while getting dialog id')\r\n    }\r\n  })\r\n  .then(data => {\r\n    return data.dialogId;\r\n  })\r\n  .catch(error => {\r\n    console.error('Error uploading photo:', error);\r\n    return 0;\r\n  });\r\n} \r\n\r\n\r\nasync function toDialog(friendId) {\r\n  let dialogId = await getDialogId(friendId);\r\n  window.location.href = `/dialog/${dialogId}`;\r\n}\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/dialog.js?");

/***/ }),

/***/ "./src/js/modules/fetchSearch.js":
/*!***************************************!*\
  !*** ./src/js/modules/fetchSearch.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   displaySearchResults: () => (/* binding */ displaySearchResults)\n/* harmony export */ });\nfunction displaySearchResults(users) {\r\n  const searchResults = document.getElementById('search-results-id');\r\n  searchResults.innerHTML = '';\r\n  //  profileAvatarsDir в head.html\r\n  users.forEach(user => {\r\n      const searchItem = document.createElement('li');\r\n      searchItem.className = \"search-results__item border-bottom\";\r\n      const searchTemplate = `\r\n      <a class=\"search-results__info\" href=\"${profilePath}/${user.id}\">\r\n        <img src=\"${profileAvatarsDir}/${user.img}\" alt=\"\" class=\"search-results__photo\">\r\n        <div class=\"search-results__contact\">\r\n          <div class=\"search-results__fio\">\r\n            <span class=\"search-results__name\">${user.name}</span>\r\n            <span class=\"search-results__surname\">${user.surname}</span>\r\n          </div>\r\n          <div class=\"search-results__other-info\">Профессионал своего дела</div>\r\n        </div>\r\n      </a>\r\n      <div class=\"search-results__activity\">\r\n        <button class=\"search-results__button _icon-messages\" data-add-friend=\"${user.status == \"None\" ? true : false}\"\r\n        data-send-message=\"${user.status == \"Friends\" ? true : false}\"></button>\r\n      </div>\r\n    `;\r\n    searchItem.innerHTML = searchTemplate\r\n    searchResults.appendChild(searchItem);\r\n    \r\n  });\r\n}\n\n//# sourceURL=webpack://gulp/./src/js/modules/fetchSearch.js?");

/***/ }),

/***/ "./src/js/modules/input-fields.js":
/*!****************************************!*\
  !*** ./src/js/modules/input-fields.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoResize: () => (/* binding */ autoResize),\n/* harmony export */   sendMessageButton: () => (/* binding */ sendMessageButton)\n/* harmony export */ });\nlet defaultHeight = 0;\r\n\r\nfunction autoResize(event, id, target_id=\"\") {\r\n  const textField = document.getElementById(`${id}`);\r\n  const dataText = textField.getAttribute('data-text');\r\n\r\n  if (!textField.textContent) {\r\n      defaultHeight = textField.style.height;\r\n  }\r\n  if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n      if (id == 'add-note-field') {\r\n          newNote(textField, dataText);\r\n      }\r\n      else if (id == 'new-dialog-message') {\r\n        newChatMessage(textField, dataText, id, target_id);\r\n      }\r\n      else if (id == 'new-chat-message') {\r\n        newChatMessage(textField, dataText, id, target_id);\r\n      }\r\n      else if (id.includes('new-comment-message')) {\r\n        newPostComment(textField, dataText, id, target_id);\r\n      }\r\n  }\r\n  if (textField.style.height.slice(0, -2) < textField.scrollHeight) {\r\n    requestAnimationFrame(() => {\r\n      textField.style.transition = 'height 0.3s ease';\r\n      textField.style.height = (textField.scrollHeight + 5) + 'px'; \r\n  });\r\n  }\r\n \r\n}\r\n\r\n\r\nfunction newNote(textField, dataText) {\r\n  exportPublication('add-note-field', 'media-grid-upload-result');\r\n  textField.textContent = '';\r\n  textField.style.height = defaultHeight; \r\n  textField.setAttribute('data-text', dataText); \r\n  return;\r\n}\r\n\r\n\r\nfunction newChatMessage(textField, dataText, inputId, chat_id) {\r\n  if (inputId == 'new-dialog-message') {\r\n    exportMessage(inputId, 'media-grid-upload-result', 'dialog', chat_id);\r\n    clearGrid('media-grid-upload-result', 'chat');\r\n  }\r\n  else {\r\n    exportMessage(inputId, 'media-grid-upload-result', 'chat', chat_id);\r\n    clearGrid('media-grid-upload-result', 'chat');\r\n  }\r\n  textField.textContent = '';\r\n  textField.style.height = defaultHeight; \r\n  textField.setAttribute('data-text', dataText);\r\n\r\n  return;\r\n}\r\n\r\n\r\nfunction newPostComment(textField, dataText, inputId, post_id) {\r\n  exportPostComment(inputId, `media-grid-upload-result-${post_id}`, post_id);\r\n  clearGrid(`media-grid-upload-result-${post_id}`, 'comment');\r\n  textField.textContent = '';\r\n  textField.style.height = defaultHeight; \r\n  textField.setAttribute('data-text', dataText);\r\n\r\n  return;\r\n}\r\n\r\n\r\nfunction sendMessageButton(id, target_id='') {\r\n  const textField = document.getElementById(`${id}`);\r\n  const dataText = textField.getAttribute('data-text');\r\n\r\n  if (textField && target_id) {\r\n    if (id == 'add-note-field') {\r\n      newNote(textField, dataText);\r\n    }\r\n    else if (id == 'new-dialog-message' || id == 'new-chat-message') {\r\n      newChatMessage(textField, dataText, id, target_id);\r\n    }\r\n    else if (id.includes('new-comment-message')) {\r\n      newPostComment(textField, dataText, id, target_id)\r\n    }\r\n  }\r\n}\n\n//# sourceURL=webpack://gulp/./src/js/modules/input-fields.js?");

/***/ }),

/***/ "./src/js/modules/like.js":
/*!********************************!*\
  !*** ./src/js/modules/like.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toggleLike: () => (/* binding */ toggleLike)\n/* harmony export */ });\nfunction toggleLike(likeButton, postId) {\r\n  let likeIcon = likeButton.querySelector('.like-active');\r\n  let action;\r\n  if (likeIcon) {\r\n\r\n    if (likeButton.classList.contains('btn-active')) {\r\n      let likeCount = parseInt(likeButton.querySelector('.count').textContent) - 1;\r\n      likeButton.querySelector('.count').textContent = likeCount;\r\n      likeButton.classList.replace('btn-active', 'btn')\r\n      likeIcon.classList.remove('like-active');\r\n      action = \"delete\";\r\n    }\r\n  } else {\r\n    let likeCount = parseInt(likeButton.querySelector('.count').textContent) + 1;\r\n    likeButton.querySelector('.count').textContent = likeCount;\r\n    likeIcon = likeButton.querySelector('._icon-like');\r\n    if (likeIcon) {\r\n      likeIcon.classList.add('like-active');\r\n      likeButton.classList.replace('btn', 'btn-active')\r\n      action = \"add\";\r\n    }\r\n\r\n  }\r\n  const form = new FormData();\r\n  form.append('postId', postId);\r\n  form.append('action', action);\r\n  fetch('/switch_post_like', {\r\n    method : \"Post\",\r\n    body: form,\r\n  })\r\n  .then(response => {\r\n    if (response.ok) {\r\n      console.log(\"Like successfully toggled\")\r\n    }\r\n    else {\r\n      console.log(\"Something went wrong\")\r\n    }\r\n  })\r\n  .catch(error => {\r\n    console.error(\"An error occured\", error)\r\n  })\r\n}\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/like.js?");

/***/ }),

/***/ "./src/js/modules/makeCorrectDate.js":
/*!*******************************************!*\
  !*** ./src/js/modules/makeCorrectDate.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeCorrectDate: () => (/* binding */ makeCorrectDate)\n/* harmony export */ });\nfunction makeCorrectDate(date) {\r\n  var timeValue = new Date(date);\r\n  var formattedTime;\r\n\r\n  var today = new Date();\r\n  var yesterday = new Date(today);\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  var monthNames = [\"янв\", \"фев\", \"мар\", \"апр\", \"мая\", \"июня\",\r\n                    \"июля\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"];\r\n  var day = timeValue.getDate();\r\n  var year = timeValue.getFullYear();\r\n  var monthName = monthNames[timeValue.getMonth()];\r\n  if (timeValue.toDateString() === today.toDateString()) {\r\n      formattedTime = `сегодня в ${timeValue.getHours().toString().padStart(2, '0')}:${timeValue.getMinutes().toString().padStart(2, '0')}`;\r\n  } else if (timeValue.toDateString() === yesterday.toDateString()) {\r\n      formattedTime = `вчера в ${timeValue.getHours().toString().padStart(2, '0')}:${timeValue.getMinutes().toString().padStart(2, '0')}`;\r\n  } else if (timeValue.getFullYear() === today.getFullYear()) {\r\n      formattedTime = `${day} ${monthName} в ${timeValue.getHours().toString().padStart(2, '0')}:${timeValue.getMinutes().toString().padStart(2, '0')}`;\r\n  } else {\r\n    formattedTime = `${day} ${monthName} ${year}`;\r\n  }\r\n  return formattedTime\r\n}\n\n//# sourceURL=webpack://gulp/./src/js/modules/makeCorrectDate.js?");

/***/ }),

/***/ "./src/js/modules/new-chat.js":
/*!************************************!*\
  !*** ./src/js/modules/new-chat.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPerson: () => (/* binding */ addPerson),\n/* harmony export */   createChatList: () => (/* binding */ createChatList),\n/* harmony export */   loadChatList: () => (/* binding */ loadChatList),\n/* harmony export */   toggleUserList: () => (/* binding */ toggleUserList)\n/* harmony export */ });\nfunction addPerson(user) {\r\n  if (user.classList.contains(\"radio-btn-active\")) {\r\n    user.classList.remove('radio-btn-active');\r\n    user.classList.add(\"radio-btn\");\r\n  } else {\r\n    user.classList.remove(\"radio-btn\");\r\n    user.classList.add(\"radio-btn-active\");\r\n  }\r\n}\r\n\r\n\r\nfunction toggleUserList() {\r\n  let userList = document.querySelector('#users-list-id');\r\n  let userItems = document.querySelector('#users-items-id');\r\n  let chatList = document.querySelector('#chat-list-id');\r\n  let newChatButton = document.querySelector('#new-chat');\r\n\r\n  if (userList && chatList && newChatButton) {\r\n    if (userList.style.display === 'block') {\r\n      // Плавное скрытие userList и плавное отображение dialogsList\r\n      userList.style.opacity = '0';\r\n      userList.style.transition = 'opacity 0.3s ease';\r\n\r\n      userItems.style.opacity = '0';\r\n      userItems.style.transition = 'opacity 0.3s ease';\r\n\r\n      chatList.style.opacity = '0';\r\n      chatList.style.transition = 'opacity 0.3s ease';\r\n\r\n      setTimeout(() => {\r\n        userList.style.display = 'none';\r\n        userItems.style.display = 'none';\r\n        chatList.style.display = 'block';\r\n        setTimeout(() => {\r\n          chatList.style.opacity = '1';\r\n        }, 50);\r\n      }, 300);\r\n      \r\n      // Удаление блока dialogs__new-dialog\r\n      let newDialogBlock = document.querySelector('.dialogs__new-dialog');\r\n      if (newDialogBlock) {\r\n        newDialogBlock.remove();\r\n      }\r\n      \r\n      // Вставка блока search__new-chat после input с id=\"dialog-search-field\"\r\n      let dialogSearchField = document.querySelector('#dialog-search-field');\r\n      if (dialogSearchField) {\r\n        let newChatButton = document.createElement('div');\r\n        newChatButton.classList.add('search__new-chat');\r\n        newChatButton.classList.add('_icon-plus');\r\n        newChatButton.id = 'new-chat';\r\n        newChatButton.setAttribute('onclick', 'toggleUserList()');\r\n        dialogSearchField.parentNode.insertBefore(newChatButton, dialogSearchField.nextSibling);\r\n      }\r\n    } else {\r\n      // Удаление блока search__new-chat, если он существует\r\n      let searchNewChat = document.querySelector('.search__new-chat');\r\n      if (searchNewChat) {\r\n        searchNewChat.remove();\r\n      }\r\n      \r\n      let newDialogBlock = document.createElement('div');\r\n      newDialogBlock.classList.add('dialogs__new-dialog');\r\n      \r\n      // Создание заголовка и иконки в один ряд\r\n      let titleText = document.createElement('h2');\r\n      titleText.textContent = 'Создание чата';\r\n      let iconDiv = document.createElement('div');\r\n      iconDiv.classList.add('fa');\r\n      iconDiv.classList.add('_icon-close');\r\n      iconDiv.id = 'new-chat';\r\n      iconDiv.setAttribute('onclick', 'toggleUserList()');\r\n      \r\n      // Добавление заголовка и иконки в блок newDialogBlock\r\n      newDialogBlock.appendChild(titleText);\r\n      newDialogBlock.innerHTML += ' '; // Добавляем пробел в HTML разметку\r\n      newDialogBlock.appendChild(iconDiv); // Добавляем иконку после пробела\r\n      \r\n      // Вставка блока newDialogBlock перед dialogs__search\r\n      let dialogsSearch = document.querySelector('.dialogs__search');\r\n      if (dialogsSearch) {\r\n        dialogsSearch.parentNode.insertBefore(newDialogBlock, dialogsSearch);\r\n      }\r\n      \r\n      // Плавное отображение userList и плавное скрытие dialogsList\r\n      userList.style.opacity = '0';\r\n      userList.style.transition = 'opacity 0.3s ease';\r\n\r\n      userItems.style.opacity = '0';\r\n      userItems.style.transition = 'opacity 0.3s ease';\r\n\r\n      chatList.style.opacity = '0';\r\n      chatList.style.transition = 'opacity 0.3s ease';\r\n\r\n      setTimeout(() => {\r\n        userList.style.display = 'block';\r\n        userItems.style.display = 'block';\r\n        chatList.style.display = 'none';\r\n        setTimeout(() => {\r\n          userList.style.opacity = '1';\r\n          userItems.style.opacity = '1';\r\n        }, 50);\r\n      }, 300);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction createChatList(chats) {\r\n  const chatList = document.getElementById('chat-list-id');\r\n  chatList.innerHTML = ''; // Очистка существующего списка \r\n  //  groupAvatarsDir в head.html\r\n  chats.forEach(chat => {  // подставляем инфу о чатах в шаблоны \r\n    const chatItem = document.createElement('li');\r\n    const chatTemplate = `\r\n      <a class=\"dialog__block\" href=\"${chat.chat_url }/${ chat.id }\">\r\n        <div class=\"dialog__photo\">\r\n            <img src=\"${chat.avatar_dir}/${chat.img}\" alt=\"\">\r\n        </div>\r\n        <div class=\"dialog__content\">\r\n            <div class=\"dialog__title\">\r\n                <span class=\"dialog__title text\">${chat.title}</span>\r\n                <div class=\"date__subtitle\"><time class=\"date__date\" time=\"${chat.last_update}\">${makeCorrectDate(chat.last_update)}</time></div>\r\n            </div>\r\n            <div class=\"dialog__preview unread\">\r\n                <span class=\"dialog__preview text\">${chat.last_message_user}${chat.last_message}</span>\r\n            </div>\r\n        </div>\r\n      </a>\r\n    `;  \r\n    chatItem.innerHTML = chatTemplate;\r\n\r\n    chatList.appendChild(chatItem);\r\n  });\r\n};\r\n\r\n\r\nfunction loadChatList(){\r\n  fetch('/get_chats', {\r\n    method: 'GET'\r\n  })\r\n  .then(response => {\r\n      if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n      }\r\n      return response.json();\r\n  })\r\n  .then(data => {\r\n    createChatList(data);\r\n  })\r\n}\n\n//# sourceURL=webpack://gulp/./src/js/modules/new-chat.js?");

/***/ }),

/***/ "./src/js/modules/preloader.js":
/*!*************************************!*\
  !*** ./src/js/modules/preloader.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hidePreloader: () => (/* binding */ hidePreloader),\n/* harmony export */   showPreloader: () => (/* binding */ showPreloader)\n/* harmony export */ });\nfunction showPreloader(parent) {\r\n\r\n  console.log('its show')\r\n  const preloaderElement = document.querySelector(`#${parent}-preloader`);\r\n  if (preloaderElement) {\r\n    preloaderElement.style.display = 'block';\r\n    console.log('block')\r\n  } else {\r\n    console.error(`Could not find preloader element with ID #${parent}-preloader`);\r\n  }\r\n}\r\n\r\nfunction hidePreloader(parent) {\r\n  let preloader = document.querySelector(`#${parent}-preloader`);\r\n  console.log('its hide')\r\n  if (preloader) {\r\n    preloader.style.display = 'none';\r\n  }\r\n}\n\n//# sourceURL=webpack://gulp/./src/js/modules/preloader.js?");

/***/ }),

/***/ "./src/js/modules/schedules.js":
/*!*************************************!*\
  !*** ./src/js/modules/schedules.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updateChat: () => (/* binding */ updateChat),\n/* harmony export */   updateChatListByUrl: () => (/* binding */ updateChatListByUrl),\n/* harmony export */   updateComments: () => (/* binding */ updateComments),\n/* harmony export */   updateMessagesByUrl: () => (/* binding */ updateMessagesByUrl)\n/* harmony export */ });\nfunction updateMessagesByUrl() {\r\n  const currentURL = window.location.href;\r\n  let chat_id = currentURL.substring(currentURL.lastIndexOf('/') + 1);\r\n  if (currentURL.includes('/dialog/')) {\r\n    updateChat(\"dialog\", chat_id);\r\n  }\r\n  else if (currentURL.includes('/chat/')) {\r\n    updateChat(\"group\", chat_id);\r\n  }\r\n  else if (chat_id === '' || currentURL.includes('/profile')) {\r\n    updateComments();\r\n  }\r\n}\r\n\r\n\r\nfunction updateChatListByUrl() {\r\n  const currentURL = window.location.href;\r\n  if (currentURL.includes('/chats')) {\r\n    loadChatList();\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction updateChat(chatType, chatId) {\r\n  const messageList = (chatType === \"dialog\" ? document.getElementById(\"dialog-messages-id\") : document.getElementById(\"chat-messages-id\"));\r\n  const lastMessage = messageList.firstElementChild;\r\n  let lastMessageId;\r\n  if (lastMessage) {\r\n    lastMessageId = lastMessage.id;\r\n  }\r\n  else {\r\n    lastMessageId = (chatType === \"dialog\" ? \"dialog-0\" : \"chat-0\");\r\n  }\r\n  lastMessageId = lastMessageId.substring(lastMessageId.lastIndexOf('-') + 1);\r\n  const url = (chatType === \"dialog\" ? '/get_last_dialog_messages' : '/get_last_chat_messages');\r\n  const form = new FormData();\r\n  if (chatType === \"dialog\") form.append('dialogId', chatId);\r\n  else form.append('chatId', chatId);\r\n  form.append('lastMessageId', lastMessageId);\r\n  const imageDir = (chatType === \"dialog\" ? dialogImagesDir : chatImagesDir);\r\n  fetch(url, {\r\n    method: 'POST',\r\n    body: form,\r\n  })\r\n  .then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    } else {\r\n      throw new Error('Failed to get messages');\r\n    }\r\n  })\r\n  .then(data => {\r\n    \r\n    data.messages.forEach(message => {\r\n      const imageList = document.createElement('ul');\r\n      imageList.className = `messages-take media-grid items-${(message.images.length !== 0 ? message.images.length : '')}`\r\n      message.images.forEach(image => {\r\n        const newImage = document.createElement('li');\r\n        newImage.className = 'media-grid item';\r\n        newImage.innerHTML = `<img src=\"${imageDir}/${image}\" alt=\"\" class=\"media-grid__img\">`\r\n        imageList.appendChild(newImage);\r\n      });\r\n      if (chatType == \"dialog\") {\r\n\r\n        const dialogMessage = document.createElement('li');\r\n        dialogMessage.className = 'dialog-with__item';\r\n        dialogMessage.id = `dialog-${message.id}`\r\n        dialogMessage.innerHTML = `\r\n          <div class=\"item-content\">  \r\n            <img class=\"dialog-with__photo\" src=\"${profileAvatarsDir}/${message.userImg}\" alt=\"\">\r\n            <div class=\"dialog-with__message-info\">\r\n                <div class=\"dialog-with__sender\">\r\n                    <a href=\"${profilePath}/${message.userId}\" class=\"dialog-with__from-whom\">${message.userFullname}</a>\r\n                    <div class=\"date__subtitle\"><time class=\"date__date\" time=\"${message.createdDate}\">${makeCorrectDate(message.createdDate)}</time></div>\r\n                </div>\r\n                <div class=\"dialog-with__text\">${message.content}</div>\r\n            </div>\r\n          </div>\r\n        `\r\n\r\n        dialogMessage.appendChild(imageList);\r\n        messageList.insertBefore(dialogMessage, messageList.firstChild);\r\n      }\r\n      else {\r\n        const chatMessage = document.createElement('li');\r\n        chatMessage.className = 'dialog-with__item';\r\n        chatMessage.id = `chat-${message.id}`\r\n        chatMessage.innerHTML = `\r\n          <div class=\"item-content\">  \r\n            <img class=\"dialog-with__photo\" src=\"${profileAvatarsDir}/${message.userImg}\" alt=\"\">\r\n            <div class=\"dialog-with__message-info\">\r\n                <div class=\"dialog-with__sender\">\r\n                    <a href=\"${profilePath}/${message.userId}\" class=\"dialog-with__from-whom\">${message.userFullname}</a>\r\n                    <div class=\"date__subtitle\"><time class=\"date__date\" time=\"${message.createdDate}\">${makeCorrectDate(message.createdDate)}</time></div>\r\n                </div>\r\n                <div class=\"dialog-with__text\">${message.content}</div>\r\n            </div>\r\n          </div>\r\n        `\r\n        chatMessage.appendChild(imageList);\r\n        messageList.insertBefore(chatMessage, messageList.firstChild);\r\n      }\r\n    });\r\n  })\r\n  .catch(error => {\r\n    console.error('An error occured while getting last messages:', error);\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\nfunction updateComments() {\r\n  const allComments = document.querySelectorAll(\".news-comments.active\");\r\n\r\n  const form = new FormData();\r\n  allComments.forEach(commentHolder => {\r\n    let postId = commentHolder.id;\r\n    postId = postId.substring(postId.lastIndexOf('-') + 1);\r\n    const commentList = commentHolder.querySelector(\".news-comments__list\");\r\n    const lastComment = commentList.lastElementChild;\r\n    let lastCommentId;\r\n    if (lastComment) {\r\n      lastCommentId = lastComment.id;\r\n    }\r\n    else {\r\n      lastCommentId = \"comment-0\";\r\n    }\r\n    lastCommentId = lastCommentId.substring(lastCommentId.lastIndexOf('-') + 1);\r\n    form.append(postId, `${postId} ${lastCommentId}`);\r\n  });\r\n  fetch('/get_post_comments', {\r\n    method: 'POST',\r\n    body: form,\r\n  })\r\n  .then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    } else {\r\n      throw new Error('Failed to get new comments');\r\n    }\r\n  })\r\n  .then(data => {\r\n    data.commentLists.forEach(commentList => {\r\n      commentList.forEach(comment => {\r\n        const imageList = document.createElement('ul');\r\n        imageList.className = `messages-take media-grid items-${(comment.images.length !== 0 ? comment.images.length : '')}`\r\n        comment.images.forEach(image => {\r\n          const newImage = document.createElement('li');\r\n          newImage.className = 'media-grid item';\r\n          newImage.innerHTML = `<img src=\"${postCommentImagesDir}/${image}\" alt=\"\" class=\"media-grid__img\">`\r\n          imageList.appendChild(newImage);\r\n        });\r\n        const commentItem = document.createElement('li');\r\n        commentItem.style.display = 'block';\r\n        commentItem.className = 'news-comments__item';\r\n        commentItem.id = `comment-${comment.id}`;\r\n        \r\n        commentItem.innerHTML = `\r\n          <div class=\"news-comments__content\">\r\n            <img src=\"${profileAvatarsDir}/${comment.userImg}\" alt=\"\" class=\"news-comments__photo\">\r\n            <div class=\"news-comments__text-content\">\r\n                <a href=\"${profilePath}/${comment.userId}\" class=\"news-comments__sender\">${comment.userFullname}</a>\r\n                <div class=\"news-comments__text\">${comment.content}</div>\r\n                <div class=\"date__subtitle\"><time class=\"date__date\" time=\"${comment.createdDate}\">${makeCorrectDate(comment.createdDate)}</time></div>            \r\n            </div>\r\n          </div>\r\n        `\r\n        commentItem.appendChild(imageList);\r\n        const populatingList = document.getElementById(`comments-list-${comment.postId}`);\r\n        populatingList.appendChild(commentItem);\r\n      })\r\n\r\n    });\r\n  })\r\n  .catch(error => {\r\n    console.error('An error occured while getting last comments:', error);\r\n  });\r\n}\n\n//# sourceURL=webpack://gulp/./src/js/modules/schedules.js?");

/***/ }),

/***/ "./src/js/modules/search-all.js":
/*!**************************************!*\
  !*** ./src/js/modules/search-all.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   searchAll: () => (/* binding */ searchAll)\n/* harmony export */ });\nlet timerId;\r\n\r\nasync function searchAll(field) {\r\n  clearTimeout(timerId);\r\n\r\n  timerId = setTimeout(() => {\r\n    let fieldValue = field.value;\r\n    field.setAttribute('value', fieldValue); // Исправленная строка\r\n  }, 500);\r\n}\n\n//# sourceURL=webpack://gulp/./src/js/modules/search-all.js?");

/***/ }),

/***/ "./src/js/modules/targetSearch.js":
/*!****************************************!*\
  !*** ./src/js/modules/targetSearch.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hideSearchResults: () => (/* binding */ hideSearchResults),\n/* harmony export */   targetSearch: () => (/* binding */ targetSearch)\n/* harmony export */ });\nfunction targetSearch() {\r\n  let listSearch = document.querySelector('.nav__search-results');\r\n  if (listSearch.style.opacity == '0' || listSearch.style.display === 'none') {\r\n      listSearch.style.display = 'block';\r\n      setTimeout(() => {\r\n          listSearch.style.opacity = '1';\r\n      }, 10); // Добавляем небольшую задержку для запуска анимации\r\n  }\r\n}\r\n\r\nfunction hideSearchResults() {\r\n  let listSearch = document.querySelector('.nav__search-results');\r\n  listSearch.style.opacity = '0';\r\n  setTimeout(() => {\r\n      listSearch.style.display = 'none';\r\n  }, 300); // Длительность анимации в миллисекундах\r\n}\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/targetSearch.js?");

/***/ }),

/***/ "./src/js/modules/triggerModal.js":
/*!****************************************!*\
  !*** ./src/js/modules/triggerModal.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeModal: () => (/* binding */ closeModal),\n/* harmony export */   openModal: () => (/* binding */ openModal)\n/* harmony export */ });\nfunction openModal(modal, resultId=\"\") {\r\n  \r\n  let modalOpen = document.getElementById(modal);\r\n  if (resultId) modalOpen.setAttribute(\"data-upload-id\", resultId);\r\n  if (modalOpen.style.display == \"none\") {\r\n    let overlay = document.querySelector(`.overlay`)\r\n    overlay.style.opacity = \"1\";\r\n    overlay.style.display = \"block\";\r\n    modalOpen.style.display = 'block';\r\n  } \r\n}\r\n\r\nfunction closeModal(modal) {\r\n  let modalOpen = document.querySelector(`#${modal}`);\r\n  modalOpen.setAttribute(\"data-upload-id\", \"\");\r\n  if (modalOpen.style.display == \"block\") {\r\n    document.querySelector(`.overlay`).style.display = 'none';\r\n    modalOpen.style.display = 'none';\r\n  } \r\n}\n\n//# sourceURL=webpack://gulp/./src/js/modules/triggerModal.js?");

/***/ }),

/***/ "./src/js/modules/uploadPhoto.js":
/*!***************************************!*\
  !*** ./src/js/modules/uploadPhoto.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportProfilePhoto: () => (/* binding */ exportProfilePhoto),\n/* harmony export */   uploadPhoto: () => (/* binding */ uploadPhoto)\n/* harmony export */ });\nfunction uploadPhoto(from, to) {\r\n  let insert = document.querySelector(`#${to}`);\r\n  if (insert) {\r\n    insert.src = URL.createObjectURL(from.files[0]);\r\n  }\r\n}\r\n\r\nfunction exportProfilePhoto(from) {\r\n  let preview = document.querySelector(`#${from}`);\r\n  if (preview && preview.src) {\r\n    const imageUrl = preview.src;\r\n    fetch(imageUrl)\r\n      .then(response => response.blob())\r\n      .then(blob => {\r\n        const formData = new FormData();\r\n        formData.append('photo', blob);\r\n        fetch('/export_profile_photo', {\r\n          method: 'POST',\r\n          body: formData\r\n        })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            console.log('Photo uploaded successfully');\r\n            setTimeout(function() {\r\n              location.reload();\r\n            }, 1000);\r\n          } else {\r\n            console.error('Failed to upload photo');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error uploading photo:', error);\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching blob data:', error);\r\n      });\r\n  } else {\r\n    console.error('Preview element not found or empty');\r\n  }\r\n} \r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/uploadPhoto.js?");

/***/ }),

/***/ "./src/js/modules/uploadPublication.js":
/*!*********************************************!*\
  !*** ./src/js/modules/uploadPublication.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearGrid: () => (/* binding */ clearGrid),\n/* harmony export */   deletePhoto: () => (/* binding */ deletePhoto),\n/* harmony export */   exportMessage: () => (/* binding */ exportMessage),\n/* harmony export */   exportPostComment: () => (/* binding */ exportPostComment),\n/* harmony export */   exportPublication: () => (/* binding */ exportPublication),\n/* harmony export */   populateFromUpload: () => (/* binding */ populateFromUpload),\n/* harmony export */   updateMediaGrid: () => (/* binding */ updateMediaGrid),\n/* harmony export */   uploadPhotos: () => (/* binding */ uploadPhotos)\n/* harmony export */ });\nfunction uploadPhotos(input, targetElementId) {\r\n  const files = input.files;\r\n  const targetElement = document.querySelector(`#${targetElementId}`)\r\n  let currLength = targetElement.classList[1];\r\n  if (currLength === \"items-\") {\r\n    targetElement.classList.replace(currLength, `items-${files.length}`);\r\n  } else {\r\n    currLength = targetElement.children.length;\r\n    if (targetElement.classList.contains(`items-${currLength}`)) {\r\n      targetElement.classList.replace(`items-${currLength}`, `items-${files.length + currLength}`)\r\n    }\r\n  }\r\n\r\n  if (currLength == 'items-') {\r\n    currLength = 0;\r\n  }\r\n\r\n  if (currLength + files.length < 10) {\r\n    for (let i = 1; i <= files.length; i++) {\r\n      let li = document.createElement('li');\r\n      li.classList.add('media-grid', 'item');\r\n      li.setAttribute('id', `media-grid-item-${currLength + i}`)\r\n\r\n      let labelDelete = document.createElement('label');\r\n      labelDelete.setAttribute('onclick', `deletePhoto('${targetElementId}', '${li.getAttribute('id')}', 'media-grid-item')`)\r\n      labelDelete.classList.add('media-grid__delete', '_icon-close');\r\n      labelDelete.setAttribute('for', `media-grid-item-${currLength + i}`)\r\n\r\n      let insert = document.createElement('img');\r\n      insert.classList.add('media-grid__img');\r\n      li.append(labelDelete, insert);\r\n      targetElement.append(li);\r\n      insert.src = URL.createObjectURL(files[i - 1]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction deletePhoto(grid, from, itemName) {\r\n  document.querySelector(`#${from}`).remove()\r\n  updateMediaGrid(grid, itemName)\r\n} \r\n\r\n\r\nfunction clearGrid(gridId, type='') {\r\n  const grid = document.getElementById(gridId);\r\n  grid.innerHTML = '';\r\n  grid.className = (type === 'chat' || type === 'comment' ? 'media-grid items- messages-send' : 'media-grid items-');\r\n} \r\n\r\n\r\nfunction updateMediaGrid(id, itemName) {\r\n  let grid = document.querySelector(`#${id}`)\r\n  let currLength = grid.children.length;\r\n  if (!currLength) grid.classList.replace(`items-${currLength + 1}`, `items-`)\r\n  else grid.classList.replace(`items-${currLength + 1}`, `items-${currLength}`)\r\n  let gridElements = grid.querySelectorAll('li');\r\n  for (let i = 1; i <= currLength; i++) {\r\n    const li = gridElements[i - 1];\r\n    const labelDelete = li.querySelector(`label[for=\"${li.getAttribute('id')}\"]`)\r\n    li.setAttribute('id',  `${itemName}-${i}`);\r\n    labelDelete.setAttribute('onclick', `deletePhoto('${id}', '${itemName}-${i}', '${itemName}')`);\r\n    labelDelete.setAttribute('for', `${itemName}-${i}`);\r\n  }\r\n}\r\n\r\nfunction populateFromUpload(uploadId, targetId=\"\", fromData=\"\") {\r\n  if (fromData) targetId = document.querySelector(`#${fromData}`).getAttribute('data-upload-id');\r\n  const uploadElement = document.querySelector(`#${uploadId}`)\r\n  const targetElement = document.querySelector(`#${targetId}`)\r\n  let uploadClass = uploadElement.classList[1];\r\n  let targetClass = targetElement.classList[1];\r\n  if (uploadClass === \"items-\") return;\r\n  let uploadLength = parseInt(uploadClass.charAt(uploadClass.length - 1), 10);\r\n  let targetLength = 0;\r\n  if (targetClass === \"items-\") targetElement.classList.replace(targetClass, `items-${uploadLength}`);\r\n  else {\r\n    targetLength = parseInt(targetClass.charAt(targetClass.length - 1), 10);\r\n    targetElement.classList.replace(targetClass, `items-${uploadLength + targetLength}`);\r\n  }\r\n\r\n  let uploadElements = uploadElement.querySelectorAll('li');\r\n  for (let i = 1; i <= uploadLength; i++) {\r\n    let li = document.createElement('li');\r\n    li.classList.add('media-grid', 'item');\r\n    li.setAttribute('id', `media-grid-result-item-${targetLength + i}`)\r\n\r\n    let labelDelete = document.createElement('label');\r\n    labelDelete.setAttribute('onclick', `deletePhoto('${targetId}', '${li.getAttribute('id')}', 'media-grid-result-item')`)\r\n    labelDelete.classList.add('media-grid__delete', '_icon-close');\r\n    labelDelete.setAttribute('for', `media-grid-result-item-${targetLength + i}`)\r\n\r\n    let insert = document.createElement('img');\r\n    insert.classList.add('media-grid__img');\r\n    li.append(labelDelete, insert);\r\n    targetElement.append(li);\r\n    insert.src = uploadElements[i - 1].querySelector('img').getAttribute('src');\r\n  }\r\n  uploadElement.innerHTML = '';\r\n  uploadElement.classList.replace(uploadClass, `items-`);\r\n}\r\n\r\n\r\n\r\n\r\nfunction fetchPublication(formData, url, imgItems, publication_type) {\r\n  let promises = [];\r\n  if (imgItems.length) {\r\n    for (let i = 1; i <= imgItems.length; ++i) {\r\n      let imgItem = imgItems[i - 1];\r\n      let imgSrc = imgItem.querySelector('img').getAttribute('src');\r\n      let promise = fetch(imgSrc)\r\n          .then(response => response.blob())\r\n          .then(blob => {\r\n              formData.append(`photo_${i}`, blob);\r\n          })\r\n          .catch(error => {\r\n              console.error('Error occurred while fetching photo:', error);\r\n          });\r\n\r\n      promises.push(promise);\r\n    }\r\n    Promise.all(promises)\r\n    .then(() => {\r\n        fetch(url, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                console.log(`${publication_type} uploaded successfully`);\r\n                if (publication_type == 'post') {\r\n                  setTimeout(function() {\r\n                    location.reload();\r\n                  }, 2000);\r\n                }\r\n\r\n            } else {\r\n                console.error(`Failed to upload ${publication_type}`);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(`Error occurred while uploading ${publication_type}:`, error);\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error('Error occurred while fetching images:', error);\r\n    });\r\n  }\r\n\r\n  else {\r\n    fetch(url, {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        console.log(`${publication_type} uploaded successfully`);\r\n        if (publication_type === 'post') {\r\n          setTimeout(function() {\r\n            location.reload();\r\n          }, 2000);\r\n        }\r\n\r\n      } else {\r\n        console.error(`Failed to upload ${publication_type}`);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error(`Error occured while uploading ${publication_type}:`, error);\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction exportPublication(textInputId, imgListId) {\r\n  let textInput = document.getElementById(textInputId);\r\n  let imgList = document.getElementById(imgListId);\r\n  let imgItems = imgList.querySelectorAll('li');\r\n  if (textInput) {\r\n    const formData = new FormData();\r\n    formData.append('text', textInput.innerText);\r\n    formData.append('img_count', imgItems.length);\r\n    fetchPublication(formData, '/upload_post', imgItems, 'post');\r\n  }\r\n} \r\n\r\n\r\nfunction exportMessage(textInputId, imgListId, chat_type, chat_id) {\r\n  let url = (chat_type === \"dialog\" ? '/upload_dialog_message' : '/upload_chat_message');\r\n  let textInput = document.getElementById(textInputId);\r\n  let imgList = document.getElementById(imgListId);\r\n  let imgItems = imgList.querySelectorAll('li');\r\n  if (textInput) {\r\n    const formData = new FormData();\r\n    formData.append('text', textInput.innerText);\r\n    formData.append('img_count', imgItems.length);\r\n    formData.append('chat_id', chat_id);\r\n    fetchPublication(formData, url, imgItems, 'message');\r\n  }\r\n} \r\n\r\n\r\nfunction exportPostComment(textInputId, imgListId, post_id) {\r\n  let textInput = document.getElementById(textInputId);\r\n  let imgList = document.getElementById(imgListId);\r\n  let imgItems = imgList.querySelectorAll('li');\r\n  if (textInput) {\r\n    const formData = new FormData();\r\n    formData.append('text', textInput.innerText);\r\n    formData.append('img_count', imgItems.length);\r\n    formData.append('post_id', post_id);\r\n    fetchPublication(formData, '/upload_post_comment', imgItems, 'comment');\r\n  }\r\n}\n\n//# sourceURL=webpack://gulp/./src/js/modules/uploadPublication.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;